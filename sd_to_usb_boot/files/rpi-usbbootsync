#!/bin/sh
# This script syncs changes on demand from the virtual /boot on the USB media to the real boot on the SD card.
#
# Part of pitools - https://github.com/zipplet/pitools
# Copyright (c) Michael Nixon 2016.

RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
CYAN='\033[1;36m'
NC='\033[0m'

PROGNAME="rpi-usbbootsync"
FAKEBOOT="/boot"
REALBOOT="/bootsd"
INSTALLMARKDIR="/pitools"
INSTALLMARK="sd_to_usb_boot"
INSTALLMARKFILE="${INSTALLMARKDIR}/${INSTALLMARK}"

# We must run as root
if [ "$(id -u)" != "0" ]; then
   echo "${RED}Please run ${PROGNAME} as root${NC}" 1>&2
   exit 1
fi

if [ ! -e "$INSTALLMARKFILE" ]; then
  echo "${RED}${INSTALLMARK} is not installed, bailing!.${NC}"
  exit 1
fi

echo "${CYAN}${PROGNAME}${NC}: Version 0.2 (20161014)"
echo "${CYAN}${PROGNAME}${NC}: Copyright (c) Michael Nixon 2016"

if [ ! -d "$REALBOOT" ]; then
  echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: ${CYAN}${REALBOOT}${NC} does not exist."
  echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: Giving up - something is badly wrong."
  exit 1
fi

if [ ! -d "$FAKEBOOT" ]; then
  echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: ${CYAN}${FAKEBOOT}${NC} does not exist."
  echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: Giving up - something is badly wrong."
  exit 1
fi

if ! grep -qs "$REALBOOT" /proc/mounts; then
  echo "${CYAN}${PROGNAME}${NC}: Mounting the boot partition from the SD card..."
  if ! mount "${REALBOOT}"; then
    echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: Failed to mount ${CYAN}${REALBOOT}${NC}"
    exit 1
  fi
else
  echo "${CYAN}${PROGNAME}${NC}: ${YELLOW}WARNING${NC}: ${CYAN}${REALBOOT}${NC} was already mounted."
fi

# Double check we did actually mount it
if ! grep -qs "$REALBOOT" /proc/mounts; then
  echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: Mount succeeded, but cannot see it"
  exit 1
fi

echo "${CYAN}${PROGNAME}: ${GREEN}Syncing any boot partition changes${NC}"
if ! rsync -ax "${FAKEBOOT}/" "${REALBOOT}"; then
  echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: Sync failed"
  exit 1
fi
if ! umount /bootsd; then
  echo "${CYAN}${PROGNAME}${NC}: ${RED}CRITICAL${NC}: Unmount failed"
  exit 1
else
  echo "${CYAN}${PROGNAME}${NC}: ${GREEN}Success, unmounted the SD card${NC}"
fi

exit 0
